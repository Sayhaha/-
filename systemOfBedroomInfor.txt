#include<stdio.h>
#include<stdlib.h>
#include<malloc.h>
#include<string.h>

typedef struct node          //定义节点
{
    char num[5];
    char name[15];
    char sex[3];
    struct node *next;
}Node,*Link;

void menu()              //菜单
{
    system("cls");
    printf("                   寝室信息管理系统             \n");
    printf("      ---- ----- ----- ----- ----- ----- ------- ---\n");
    printf("     |   1 增加学生信息        2 插入学生信息      |\n");
    printf("     |   3 删除学生信息        4 查找学生信息      |\n");
    printf("     |   5 修改学生信息        6 显示学生记录      |\n");
    printf("     |   7 退 出 系 统                             |\n");
    printf("      ----- ---- ----- ----- ----- ----- ------- ---\n");
    printf("\n\n");
};

char stringinput(char save[],char ss[])       //数据信息输入函数
{
    if(ss=="请输入床号[01 ~ 99]:"){
        char num[5];
        printf("%s",ss);
        scanf("%s",num);
        while(strlen(num)>2) {printf("超出设定长度！！！\n");printf("%s",ss);scanf("%s",num);}
        strcpy(save,num);
    }
    else if(ss=="请输入姓名:"){
        char name[15];
        printf("%s",ss);
        scanf("%s",name);
        while(strlen(name)>15) {printf("超出设定长度！！！\n");printf("%s",ss);scanf("%s",name);}
        strcpy(save,name);
    }
    else if(ss=="请输入性别(男 or 女):"){
        char sex[3];
        printf("%s",ss);
        scanf("%s",sex);
        while(strlen(sex)>3) {printf("超出设定长度！！！\n");printf("%s",ss);scanf("%s",sex);}
        strcpy(save,sex);
    }
}

void Disp(Link l)                   //显示学生信息
{
    Node *p;
    p=l->next;                             //将p指向空的头节点
    system("cls");                   //清屏函数
    if(!l){                           //判断l节点的申请空间是否成功
        printf("申请空间失败！！！");
        getchar();
        return;
    }
    if(!p) printf("-------目前表中没有学生信息---\n");
    while(p){                        //输出学生信息
        printf("床号：%s\t",p->num);
        printf("姓名：%s\t",p->name);
        printf("性别：%s\t",p->sex);
        printf("\n");
        p=p->next;
    }
    printf("\n\n按回车键继续\n");
    getchar();
    getchar();
}

void Add(Link l)             //添加学生信息的函数
{
    Node *p,*r,*s;
    char ch,ah,num[5];
    int flag=0;
    p=l;
    system("cls");
    Disp(l);
    if(!l){
        printf("申请空间失败！！！");
        getchar();
        return;
    }
    while(1){
        s=l;
       stringinput(num,"请输入床号[01 ~ 99]:");
       while(s){
            if(strcmp(s->num,num)==0){             //确保每个学生的床号唯一
                printf("该床号已有学生，是否重新输入(y or n)？");
                scanf("%c",&ch);
                if(ch=='y'||ch=='Y') {flag=1; break;}
                if(ch=='n'||ch=='N') return;
            }
            r=s;                         //让r指向链表尾
            s=s->next;
       }
       if(flag==0){
            p=(Node*)malloc(sizeof(Node));
            if(!p) {printf("申请空间失败！！！"); return;}
            strcpy(p->num,num);
            stringinput(p->name,"请输入姓名:");
            stringinput(p->sex,"请输入性别(男 or 女):");
            getchar();
            p->next=NULL;
            r->next=p;                                  //将新创建的节点接入链表尾
            printf("是否继续添加学生信息(y or n)？");
            scanf("%c",&ah);
            if(ah=='y'||ah=='Y') continue;
            if(ah=='n'||ah=='N') return;
       }
    }
}

void Insert(Link l)           //插入学生信息的函数
{
    Node *p,*r,*s;
    char num[5];
    char ch,ah;
    s=l;
    r=l;
    system("cls");
    Disp(l);
    if(!l) {printf("申请空间失败！！！"); getchar(); return;}
    while(l){
      printf("输入的床号为该学生的后一个床号\n");          //确保可以将新建的节点插入至l所指节点后
      stringinput(num,"请输入床号[01 ~ 99]:");
      s=l;
        while(s){
            if(strcmp(s->num,num)==0){                     //寻找插入的位置
                p=(Node*)malloc(sizeof(Node));
                loop:printf("请输入该学生的床号\n");
                stringinput(p->num,"请输入床号[01 ~ 99]:");
                s=l;
                while(s){
                    if(strcmp(s->num,p->num)==0){
                        printf("该学号已存在，是否重新输入(y or n)？");
                        getchar();
                        scanf("%c",&ah);
                        if(ah=='y'||ah=='Y') goto loop;
                        if(ah=='n'||ah=='N') return;
                    }
                    s=s->next;
                }
                stringinput(p->name,"请输入姓名:");
                stringinput(p->sex,"请输入性别(男 or 女):");
                p->next=r->next;
                r->next=p;
                getchar();
                printf("是否需要继续插入数据(y or n)？");
                scanf("%c",&ch);
                if(ch=='y'||ch=='Y') break;
                else return;
            }
            r=s;
            s=s->next;
       }
    }
}

void Del(Link l)             //删除学生信息的函数
{
    Node *p,*r;
    char num[5],ch,ah;
    int flag=0;
    system("cls");
    Disp(l);
    if(!l) {printf("申请内存失败！！！"); getchar(); return;}
    p=l;
    while(l){
        p=l;
        printf("请输入要删除的床位号\n");           //找到要删除的床号
        stringinput(num,"请输入床号[01 ~ 99]:");
        while(p){
            if(strcmp(p->num,num)==0){
                    printf("群定删除床号为%s的学生信息(y or n)？",p->num);
                    getchar();
                    scanf("%c",&ch);
                    if(ch=='y'||ch=='Y') flag=1;
                    if(ch=='n'||ch=='N') return;
                    if(flag==1){
                            r->next=p->next;
                            printf("删除成功！！！\n");
                            printf("是否继续删除(y or n)？");
                            getchar();
                            scanf("%c",&ah);
                            if(ah=='y'||ah=='Y') break;
                            if(ah=='n'||ah=='N') return;
                    }
            }
            r=p;
            p=p->next;
        }
    }
}

void Qur(Link l)             //查找学生信息的函数
{
    Node *p;
    char num[5];
    system("cls");
    Disp(l);
    if(!l) {printf("申请内存空间失败！！！"); getchar(); return;}
    p=l;
    printf("请输入查找学生的床号\n");
    stringinput(num,"请输入床号[01 ~ 99]:");
    while(p){
        if(strcmp(p->num,num)==0){             //找到该学生的床号
            printf("床号：%s\t",p->num);
            printf("姓名：%s\t",p->name);
            printf("性别：%s\t",p->sex);
            getchar();
            getchar();
            return;
        }
        else p=p->next;
    }
    printf("未找到相关学生信息！！！");
    getchar();
    getchar();
}

void Modify(Link l)              //修改学生信息的函数
{
    Node *p;
    char num[5];
    p=l;
    system("cls");
    Disp(l);
    if(!p) {printf("申请内存空间失败！！！"); getchar(); return;}
    printf("请输入修改的学生床号\n");
    stringinput(num,"请输入床号[01 ~ 99]:");
    while(p){
        if(strcmp(p->num,num)==0){                 //找到被修改的床号
            printf("床号：%s\t",p->num);
            printf("姓名：%s\t",p->name);
            printf("性别：%s\t",p->sex);
            stringinput(p->name,"请输入姓名:");
            stringinput(p->sex,"请输入性别(男 or 女):");
            printf("修改成功！！！");
            getchar();
            getchar();
            return;
        }
        p=p->next;
    }
}

int main()               //主函数
{   system("color 1A");  //调用函数设置运行时的背景颜色
    Link l;
    int ch;
    l=(Node *)malloc(sizeof(Node));           //申请节点空间
    if(!l) {printf("申请内存空间失败！！！"); getchar(); return 0;}
    l->next=NULL;
    while(l){
       menu();               //显示主菜单
       printf("请输入你需要进入功能前的序号：");
       scanf("%d",&ch);
       switch(ch){
           case 1:Add(l);break;
           case 2:Insert(l);break;
           case 3:Del(l);break;
           case 4:Qur(l);break;
           case 5:Modify(l);break;
           case 6:Disp(l);break;
           case 7:system("cls");printf("-------谢 谢 使 用-------");goto loop;
           default:system("cls");printf("-------输入有误！！！");printf("（按回车键返回主菜单）");getchar();getchar();break;
       }
    }
    loop:return 0;
}

